<Window x:Class="HarmoniX_View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HarmoniX_View"
        mc:Ignorable="d"
        Title="MainWindow" Height="526" Width="800" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" MouseDown="Window_MouseDown" Background="Transparent" AllowsTransparency="True">
    <Window.Resources>
        <!-- SubMenuButtonStyle -->
        <Style x:Key="SubMenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#1B1448"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="10,5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#462AD8"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="0,0,10,-16">
        <Border CornerRadius="12">
            <Border.Background>
                <ImageBrush ImageSource="/assets/back-image.jpg"
                            Stretch="None"/>
            </Border.Background>
            <Border CornerRadius="10"                    
                    BorderThickness="2"
                    Opacity="0.95" Margin="0,0,-14,0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#462AD8" Offset="0"/>
                        <GradientStop Color="#DA34AE" Offset="0.75"/>
                        <GradientStop Color="#8A16C1" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                        <GradientStop Color="#060531" Offset="0"/>
                        <GradientStop Color="#1B1448" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>

                <StackPanel Margin="20">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <!-- Song Toggle Button -->
                        <ToggleButton x:Name="btnSong" Content="Song" Width="100" Height="30" FontFamily="Montserrat" FontSize="12" Foreground="White" Background="#462AD8" BorderThickness="0" Margin="0,0,10,0" VerticalAlignment="Top">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Background" Value="#462AD8"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#28AEED"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup PlacementTarget="{Binding ElementName=btnSong}" IsOpen="{Binding IsChecked, ElementName=btnSong}" StaysOpen="False">
                            <StackPanel Background="#1B1448" Margin="0,5,0,0">
                                <Button Content="Your Song" Style="{StaticResource SubMenuButtonStyle}"/>
                                <Button Content="All Songs" Style="{StaticResource SubMenuButtonStyle}"/>
                            </StackPanel>
                        </Popup>

                        <!-- Playlist Toggle Button -->
                        <Popup PlacementTarget="{Binding ElementName=btnPlaylist}" IsOpen="{Binding IsChecked, ElementName=btnPlaylist}" StaysOpen="False">
                            <StackPanel Background="#1B1448" Margin="0,5,0,0">
                                <Button Content="Your Playlist" Style="{StaticResource SubMenuButtonStyle}"/>
                                <Button Content="All Playlists" Style="{StaticResource SubMenuButtonStyle}"/>
                                <Button x:Name="btnCreatePlaylist" Content="Create Playlist" Style="{StaticResource SubMenuButtonStyle}" Click="btnCreatePlaylist_Click"/>
                            </StackPanel>
                        </Popup>
                        <ToggleButton x:Name="btnPlaylist" Content="Playlist" Width="100" Height="30" FontFamily="Montserrat" FontSize="12" Foreground="White" Background="#462AD8" BorderThickness="0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Background" Value="#462AD8"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#28AEED"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </StackPanel>
                    <Button x:Name="BrowseButton" Content="Browse and Upload Song" Width="200" Height="56" Click="BrowseButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#462AD8"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FontFamily" Value="Montserrat"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#28AEED"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Width="150" Height="40" CornerRadius="20" Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- Existing Buttons -->

                    <!-- Your Queue and Playlist Section -->
                    <Grid Margin="0,20,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>



                        <DataGrid x:Name="QueueDataGrid" Grid.Column="0" Height="200" AutoGenerateColumns="False" Margin="-15,0,5,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Title" Binding="{Binding Title}" />
                                <DataGridTextColumn Header="Artist" Binding="{Binding Artist}" />
                                <DataGridTextColumn Header="Media" Binding="{Binding Media}" />
                            </DataGrid.Columns>
                        </DataGrid>


                        <DataGrid x:Name="SongsDataGrid" Grid.Column="1" Width="272" Height="200" AutoGenerateColumns="False" IsReadOnly="true">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Queue">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="+" Width="25" Height="25" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Title" Binding="{Binding SongTitle}" />
                                <DataGridTextColumn Header="Artist" Binding="{Binding ArtistName}" />
                                <DataGridTextColumn Header="Category" Binding="{Binding Category.CategoryName}" />
                                <DataGridTextColumn Header="Uploaded By" Binding="{Binding Account.DisplayName}" />
                            </DataGrid.Columns>
                        </DataGrid>



                        <DataGrid x:Name="PlaylistDataGrid" Grid.Column="2" Height="200" AutoGenerateColumns="False" Margin="10,0,-12,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Playlist Name" Binding="{Binding PlaylistName}" />
                                <DataGridTextColumn Header="Description" Binding="{Binding PlaylistDescription}" />
                                <DataGridTextColumn Header="Account ID" Binding="{Binding AccountId}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Button x:Name="PlayButton" Content="Play Selected Song" Width="200" Height="57" Click="PlayButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#462AD8"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FontFamily" Value="Montserrat"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#28AEED"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Width="150" Height="40" CornerRadius="20" Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </Border>
        </Border>
        <TextBox HorizontalAlignment="Left" Margin="21,332,0,0" TextWrapping="Wrap" Text="Now Playing: " VerticalAlignment="Top" Width="222" IsEnabled="False" Height="21" Background="Transparent" Foreground="White" BorderThickness="0"/>
        <TextBox x:Name="CurrentTimeTextBlock" Text="00:00" HorizontalAlignment="Left" Margin="21,353,0,0" Foreground="White" Background="Transparent" VerticalAlignment="Top" Width="34"/>
        <ProgressBar HorizontalAlignment="Left" Height="7" Margin="60,358,0,0" VerticalAlignment="Top" Width="152"/>
        <TextBox x:Name="CurrentTimeTextBlock_Copy" Text="00:00" HorizontalAlignment="Left" Margin="217,353,0,0" Foreground="White" Background="Transparent" VerticalAlignment="Top" Width="34"/>
        <TextBlock HorizontalAlignment="Left" Margin="103,375,0,0" Foreground="White" Text="Song - Artist" VerticalAlignment="Top"/>
        <TextBox HorizontalAlignment="Left" Background="Transparent" Foreground="White" Margin="47,397,0,0" TextWrapping="Wrap" Text="Volumn" VerticalAlignment="Top" Width="47"/>
        <Slider HorizontalAlignment="Left" Margin="103,397,0,0" VerticalAlignment="Top" Width="120" Value="5" />
        <Button x:Name="PlayPauseButton" HorizontalAlignment="Left" Margin="52,420,0,0" VerticalAlignment="Top" Height="32" Width="36">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="Transparent" Width="50" Height="50"/>
                        <TextBlock x:Name="PlayPauseTextBlock" Text="▶️" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button HorizontalAlignment="Left" Margin="118,420,0,0" VerticalAlignment="Top" Height="32" Width="36">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="Transparent" Width="50" Height="50"/>
                        <TextBlock Text="⏭️" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button HorizontalAlignment="Left" Margin="187,420,0,0" VerticalAlignment="Top" Height="32" Width="36">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="Transparent" Width="50" Height="50"/>
                        <TextBlock Text="🔀" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="X" HorizontalAlignment="Left" Margin="752,21,0,0" VerticalAlignment="Top" x:Name="btnClose" BorderThickness="0" Foreground="White" FontSize="16" FontFamily="Montserrat" Cursor="Hand" Click="btnClose_Click">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#DA34AE"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C62DAE"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                CornerRadius="9"
                Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="btnMinimize" BorderThickness="0" Content="-" Foreground="White" FontSize="16" FontFamily="Montserrat" Cursor="Hand" Click="btnMinimize_Click" HorizontalAlignment="Left" Margin="717,21,0,0" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#28AEED"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#278BEF"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                CornerRadius="9"
                Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</Window>
